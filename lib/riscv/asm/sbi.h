/* SPDX-License-Identifier: GPL-2.0-only */
#ifndef _ASMRISCV_SBI_H_
#define _ASMRISCV_SBI_H_

#define SBI_SUCCESS			0
#define SBI_ERR_FAILURE			-1
#define SBI_ERR_NOT_SUPPORTED		-2
#define SBI_ERR_INVALID_PARAM		-3
#define SBI_ERR_DENIED			-4
#define SBI_ERR_INVALID_ADDRESS		-5
#define SBI_ERR_ALREADY_AVAILABLE	-6
#define SBI_ERR_ALREADY_STARTED		-7
#define SBI_ERR_ALREADY_STOPPED		-8
#define SBI_ERR_NO_SHMEM		-9
#define SBI_ERR_INVALID_STATE		-10
#define SBI_ERR_BAD_RANGE		-11

#ifndef __ASSEMBLY__

enum sbi_ext_id {
	SBI_EXT_BASE = 0x10,
	SBI_EXT_HSM = 0x48534d,
	SBI_EXT_SRST = 0x53525354,
	SBI_EXT_SSE = 0x535345,
};

enum sbi_ext_base_fid {
	SBI_EXT_BASE_GET_SPEC_VERSION = 0,
	SBI_EXT_BASE_GET_IMP_ID,
	SBI_EXT_BASE_GET_IMP_VERSION,
	SBI_EXT_BASE_PROBE_EXT,
	SBI_EXT_BASE_GET_MVENDORID,
	SBI_EXT_BASE_GET_MARCHID,
	SBI_EXT_BASE_GET_MIMPID,
};

enum sbi_ext_hsm_fid {
	SBI_EXT_HSM_HART_START = 0,
	SBI_EXT_HSM_HART_STOP,
	SBI_EXT_HSM_HART_STATUS,
	SBI_EXT_HSM_HART_SUSPEND,
};

/* SBI Function IDs for SSE extension */
#define SBI_EXT_SSE_READ_ATTR		0x00000000
#define SBI_EXT_SSE_WRITE_ATTR		0x00000001
#define SBI_EXT_SSE_REGISTER		0x00000002
#define SBI_EXT_SSE_UNREGISTER		0x00000003
#define SBI_EXT_SSE_ENABLE		0x00000004
#define SBI_EXT_SSE_DISABLE		0x00000005
#define SBI_EXT_SSE_COMPLETE		0x00000006
#define SBI_EXT_SSE_INJECT		0x00000007

/* SBI SSE Event Attributes. */
enum sbi_sse_attr_id {
	SBI_SSE_ATTR_STATUS		= 0x00000000,
	SBI_SSE_ATTR_PRIO		= 0x00000001,
	SBI_SSE_ATTR_CONFIG		= 0x00000002,
	SBI_SSE_ATTR_PREFERRED_HART	= 0x00000003,
	SBI_SSE_ATTR_ENTRY_PC		= 0x00000004,
	SBI_SSE_ATTR_ENTRY_ARG		= 0x00000005,
	SBI_SSE_ATTR_INTERRUPTED_PC	= 0x00000006,
	SBI_SSE_ATTR_INTERRUPTED_FLAGS	= 0x00000007,
	SBI_SSE_ATTR_INTERRUPTED_A0	= 0x00000008,
	SBI_SSE_ATTR_INTERRUPTED_A1	= 0x00000009,
	SBI_SSE_ATTR_INTERRUPTED_A2	= 0x0000000A,
	SBI_SSE_ATTR_INTERRUPTED_A3	= 0x0000000B,
	SBI_SSE_ATTR_INTERRUPTED_A4	= 0x0000000C,
	SBI_SSE_ATTR_INTERRUPTED_A5	= 0x0000000D,
	SBI_SSE_ATTR_INTERRUPTED_A6	= 0x0000000E,
	SBI_SSE_ATTR_INTERRUPTED_A7	= 0x0000000F,
};

#define SBI_SSE_ATTR_STATUS_STATE_OFFSET	0
#define SBI_SSE_ATTR_STATUS_STATE_MASK		0x3
#define SBI_SSE_ATTR_STATUS_PENDING_OFFSET	2
#define SBI_SSE_ATTR_STATUS_INJECT_OFFSET	3

#define SBI_SSE_ATTR_CONFIG_ONESHOT	(1 << 0)

#define SBI_SSE_ATTR_INTERRUPTED_FLAGS_PP	BIT(0)
#define SBI_SSE_ATTR_INTERRUPTED_FLAGS_VS	BIT(1)
#define SBI_SSE_ATTR_INTERRUPTED_FLAGS_SPIE	BIT(2)

enum sbi_sse_state {
	SBI_SSE_STATE_UNUSED     = 0,
	SBI_SSE_STATE_REGISTERED = 1,
	SBI_SSE_STATE_ENABLED    = 2,
	SBI_SSE_STATE_RUNNING    = 3,
};

/* SBI SSE Event IDs. */
#define SBI_SSE_EVENT_LOCAL_RAS			0x00000000
#define	SBI_SSE_EVENT_LOCAL_PLAT_0_START	0x00004000
#define SBI_SSE_EVENT_LOCAL_PLAT_0_END		0x00007fff
#define SBI_SSE_EVENT_GLOBAL_RAS		0x00008000
#define	SBI_SSE_EVENT_GLOBAL_PLAT_0_START	0x00004000
#define SBI_SSE_EVENT_GLOBAL_PLAT_0_END		0x00007fff

#define SBI_SSE_EVENT_LOCAL_PMU			0x00010000
#define	SBI_SSE_EVENT_LOCAL_PLAT_1_START	0x00014000
#define SBI_SSE_EVENT_LOCAL_PLAT_1_END		0x00017fff
#define	SBI_SSE_EVENT_GLOBAL_PLAT_1_START	0x0001c000
#define SBI_SSE_EVENT_GLOBAL_PLAT_1_END		0x0001ffff

#define	SBI_SSE_EVENT_LOCAL_PLAT_2_START	0x00024000
#define SBI_SSE_EVENT_LOCAL_PLAT_2_END		0x00027fff
#define	SBI_SSE_EVENT_GLOBAL_PLAT_2_START	0x0002c000
#define SBI_SSE_EVENT_GLOBAL_PLAT_2_END		0x0002ffff

#define SBI_SSE_EVENT_LOCAL_SOFTWARE		0xffff0000
#define	SBI_SSE_EVENT_LOCAL_PLAT_3_START	0xffff4000
#define SBI_SSE_EVENT_LOCAL_PLAT_3_END		0xffff7fff
#define SBI_SSE_EVENT_GLOBAL_SOFTWARE		0xffff8000
#define	SBI_SSE_EVENT_GLOBAL_PLAT_3_START	0xffffc000
#define SBI_SSE_EVENT_GLOBAL_PLAT_3_END		0xffffffff

#define SBI_SSE_EVENT_GLOBAL_BIT		(1 << 15)
#define SBI_SSE_EVENT_PLATFORM_BIT		(1 << 14)

struct sbiret {
	long error;
	long value;
};

struct sbiret sbi_ecall(int ext, int fid, unsigned long arg0,
			unsigned long arg1, unsigned long arg2,
			unsigned long arg3, unsigned long arg4,
			unsigned long arg5);

void sbi_shutdown(void);
struct sbiret sbi_hart_start(unsigned long hartid, unsigned long entry, unsigned long sp);

#endif /* !__ASSEMBLY__ */
#endif /* _ASMRISCV_SBI_H_ */
